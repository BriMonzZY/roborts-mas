// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: costmap_parameter_setting.proto

#include "costmap_parameter_setting.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_costmap_5fparameter_5fsetting_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_costmap_5fparameter_5fsetting_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParaBasic;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_costmap_5fparameter_5fsetting_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ParaCostmapInterface;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_costmap_5fparameter_5fsetting_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_costmap_5fparameter_5fsetting_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Footprint;
}  // namespace protobuf_costmap_5fparameter_5fsetting_2eproto
namespace roborts_costmap {
class ParaBasicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParaBasic>
      _instance;
} _ParaBasic_default_instance_;
class ParaCostmapInterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParaCostmapInterface>
      _instance;
} _ParaCostmapInterface_default_instance_;
class PointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point>
      _instance;
} _Point_default_instance_;
class FootprintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Footprint>
      _instance;
} _Footprint_default_instance_;
class ParaCollectionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParaCollection>
      _instance;
} _ParaCollection_default_instance_;
}  // namespace roborts_costmap
namespace protobuf_costmap_5fparameter_5fsetting_2eproto {
static void InitDefaultsParaBasic() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::roborts_costmap::_ParaBasic_default_instance_;
    new (ptr) ::roborts_costmap::ParaBasic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::roborts_costmap::ParaBasic::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParaBasic =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParaBasic}, {}};

static void InitDefaultsParaCostmapInterface() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::roborts_costmap::_ParaCostmapInterface_default_instance_;
    new (ptr) ::roborts_costmap::ParaCostmapInterface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::roborts_costmap::ParaCostmapInterface::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParaCostmapInterface =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParaCostmapInterface}, {}};

static void InitDefaultsPoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::roborts_costmap::_Point_default_instance_;
    new (ptr) ::roborts_costmap::Point();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::roborts_costmap::Point::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint}, {}};

static void InitDefaultsFootprint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::roborts_costmap::_Footprint_default_instance_;
    new (ptr) ::roborts_costmap::Footprint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::roborts_costmap::Footprint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Footprint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFootprint}, {
      &protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_Point.base,}};

static void InitDefaultsParaCollection() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::roborts_costmap::_ParaCollection_default_instance_;
    new (ptr) ::roborts_costmap::ParaCollection();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::roborts_costmap::ParaCollection::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ParaCollection =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsParaCollection}, {
      &protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_ParaCostmapInterface.base,
      &protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_Footprint.base,
      &protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_ParaBasic.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ParaBasic.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParaCostmapInterface.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Point.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Footprint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParaCollection.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaBasic, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaBasic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaBasic, is_raw_rosmessage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaBasic, is_debug_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, global_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, robot_base_frame_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, footprint_padding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, transform_tolerance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, distance_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, map_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, map_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, map_origin_x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, map_origin_y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, map_resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, is_tracking_unknown_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, is_rolling_window_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, has_obstacle_layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, has_static_layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, has_local_static_layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, has_dynamic_obstacle_layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, has_detection_layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, inflation_file_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCostmapInterface, map_update_frequency_),
  0,
  1,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  2,
  18,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::Point, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::Point, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::Point, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::Footprint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::Footprint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::Footprint, point_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCollection, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCollection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCollection, para_costmap_interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCollection, footprint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::roborts_costmap::ParaCollection, para_basic_),
  0,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::roborts_costmap::ParaBasic)},
  { 9, 33, sizeof(::roborts_costmap::ParaCostmapInterface)},
  { 52, 59, sizeof(::roborts_costmap::Point)},
  { 61, 67, sizeof(::roborts_costmap::Footprint)},
  { 68, 76, sizeof(::roborts_costmap::ParaCollection)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::roborts_costmap::_ParaBasic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::roborts_costmap::_ParaCostmapInterface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::roborts_costmap::_Point_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::roborts_costmap::_Footprint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::roborts_costmap::_ParaCollection_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "costmap_parameter_setting.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\037costmap_parameter_setting.proto\022\017robor"
      "ts_costmap\"8\n\tParaBasic\022\031\n\021is_raw_rosmes"
      "sage\030\001 \002(\010\022\020\n\010is_debug\030\002 \001(\010\"\217\004\n\024ParaCos"
      "tmapInterface\022\024\n\014global_frame\030\001 \002(\t\022\030\n\020r"
      "obot_base_frame\030\002 \002(\t\022\031\n\021footprint_paddi"
      "ng\030\003 \002(\001\022\033\n\023transform_tolerance\030\004 \002(\001\022\032\n"
      "\022distance_threshold\030\005 \002(\001\022\021\n\tmap_width\030\006"
      " \002(\001\022\022\n\nmap_height\030\007 \002(\001\022\024\n\014map_origin_x"
      "\030\010 \002(\001\022\024\n\014map_origin_y\030\t \002(\001\022\026\n\016map_reso"
      "lution\030\n \002(\001\022\033\n\023is_tracking_unknown\030\013 \002("
      "\010\022\031\n\021is_rolling_window\030\014 \002(\010\022\032\n\022has_obst"
      "acle_layer\030\r \002(\010\022\030\n\020has_static_layer\030\016 \002"
      "(\010\022\036\n\026has_local_static_layer\030\017 \002(\010\022\"\n\032ha"
      "s_dynamic_obstacle_layer\030\020 \002(\010\022\033\n\023has_de"
      "tection_layer\030\021 \002(\010\022\033\n\023inflation_file_pa"
      "th\030\022 \002(\t\022\034\n\024map_update_frequency\030\023 \002(\001\"\035"
      "\n\005Point\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\"2\n\tFootpri"
      "nt\022%\n\005point\030\001 \003(\0132\026.roborts_costmap.Poin"
      "t\"\266\001\n\016ParaCollection\022E\n\026para_costmap_int"
      "erface\030\001 \002(\0132%.roborts_costmap.ParaCostm"
      "apInterface\022-\n\tfootprint\030\002 \002(\0132\032.roborts"
      "_costmap.Footprint\022.\n\npara_basic\030\003 \002(\0132\032"
      ".roborts_costmap.ParaBasic"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 906);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "costmap_parameter_setting.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_costmap_5fparameter_5fsetting_2eproto
namespace roborts_costmap {

// ===================================================================

void ParaBasic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParaBasic::kIsRawRosmessageFieldNumber;
const int ParaBasic::kIsDebugFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParaBasic::ParaBasic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_ParaBasic.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:roborts_costmap.ParaBasic)
}
ParaBasic::ParaBasic(const ParaBasic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_raw_rosmessage_, &from.is_raw_rosmessage_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_debug_) -
    reinterpret_cast<char*>(&is_raw_rosmessage_)) + sizeof(is_debug_));
  // @@protoc_insertion_point(copy_constructor:roborts_costmap.ParaBasic)
}

void ParaBasic::SharedCtor() {
  ::memset(&is_raw_rosmessage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_debug_) -
      reinterpret_cast<char*>(&is_raw_rosmessage_)) + sizeof(is_debug_));
}

ParaBasic::~ParaBasic() {
  // @@protoc_insertion_point(destructor:roborts_costmap.ParaBasic)
  SharedDtor();
}

void ParaBasic::SharedDtor() {
}

void ParaBasic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParaBasic::descriptor() {
  ::protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParaBasic& ParaBasic::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_ParaBasic.base);
  return *internal_default_instance();
}


void ParaBasic::Clear() {
// @@protoc_insertion_point(message_clear_start:roborts_costmap.ParaBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_raw_rosmessage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_debug_) -
      reinterpret_cast<char*>(&is_raw_rosmessage_)) + sizeof(is_debug_));
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParaBasic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roborts_costmap.ParaBasic)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool is_raw_rosmessage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_is_raw_rosmessage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_raw_rosmessage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_debug = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_is_debug();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_debug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roborts_costmap.ParaBasic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roborts_costmap.ParaBasic)
  return false;
#undef DO_
}

void ParaBasic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roborts_costmap.ParaBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool is_raw_rosmessage = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_raw_rosmessage(), output);
  }

  // optional bool is_debug = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_debug(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roborts_costmap.ParaBasic)
}

::google::protobuf::uint8* ParaBasic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roborts_costmap.ParaBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required bool is_raw_rosmessage = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_raw_rosmessage(), target);
  }

  // optional bool is_debug = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_debug(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roborts_costmap.ParaBasic)
  return target;
}

size_t ParaBasic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roborts_costmap.ParaBasic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required bool is_raw_rosmessage = 1;
  if (has_is_raw_rosmessage()) {
    total_size += 1 + 1;
  }
  // optional bool is_debug = 2;
  if (has_is_debug()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParaBasic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roborts_costmap.ParaBasic)
  GOOGLE_DCHECK_NE(&from, this);
  const ParaBasic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParaBasic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roborts_costmap.ParaBasic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roborts_costmap.ParaBasic)
    MergeFrom(*source);
  }
}

void ParaBasic::MergeFrom(const ParaBasic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roborts_costmap.ParaBasic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      is_raw_rosmessage_ = from.is_raw_rosmessage_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_debug_ = from.is_debug_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ParaBasic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roborts_costmap.ParaBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParaBasic::CopyFrom(const ParaBasic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roborts_costmap.ParaBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParaBasic::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void ParaBasic::Swap(ParaBasic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParaBasic::InternalSwap(ParaBasic* other) {
  using std::swap;
  swap(is_raw_rosmessage_, other->is_raw_rosmessage_);
  swap(is_debug_, other->is_debug_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParaBasic::GetMetadata() const {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParaCostmapInterface::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParaCostmapInterface::kGlobalFrameFieldNumber;
const int ParaCostmapInterface::kRobotBaseFrameFieldNumber;
const int ParaCostmapInterface::kFootprintPaddingFieldNumber;
const int ParaCostmapInterface::kTransformToleranceFieldNumber;
const int ParaCostmapInterface::kDistanceThresholdFieldNumber;
const int ParaCostmapInterface::kMapWidthFieldNumber;
const int ParaCostmapInterface::kMapHeightFieldNumber;
const int ParaCostmapInterface::kMapOriginXFieldNumber;
const int ParaCostmapInterface::kMapOriginYFieldNumber;
const int ParaCostmapInterface::kMapResolutionFieldNumber;
const int ParaCostmapInterface::kIsTrackingUnknownFieldNumber;
const int ParaCostmapInterface::kIsRollingWindowFieldNumber;
const int ParaCostmapInterface::kHasObstacleLayerFieldNumber;
const int ParaCostmapInterface::kHasStaticLayerFieldNumber;
const int ParaCostmapInterface::kHasLocalStaticLayerFieldNumber;
const int ParaCostmapInterface::kHasDynamicObstacleLayerFieldNumber;
const int ParaCostmapInterface::kHasDetectionLayerFieldNumber;
const int ParaCostmapInterface::kInflationFilePathFieldNumber;
const int ParaCostmapInterface::kMapUpdateFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParaCostmapInterface::ParaCostmapInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_ParaCostmapInterface.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:roborts_costmap.ParaCostmapInterface)
}
ParaCostmapInterface::ParaCostmapInterface(const ParaCostmapInterface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  global_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_global_frame()) {
    global_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.global_frame_);
  }
  robot_base_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_robot_base_frame()) {
    robot_base_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_base_frame_);
  }
  inflation_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_inflation_file_path()) {
    inflation_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inflation_file_path_);
  }
  ::memcpy(&footprint_padding_, &from.footprint_padding_,
    static_cast<size_t>(reinterpret_cast<char*>(&map_update_frequency_) -
    reinterpret_cast<char*>(&footprint_padding_)) + sizeof(map_update_frequency_));
  // @@protoc_insertion_point(copy_constructor:roborts_costmap.ParaCostmapInterface)
}

void ParaCostmapInterface::SharedCtor() {
  global_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  robot_base_frame_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inflation_file_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&footprint_padding_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&map_update_frequency_) -
      reinterpret_cast<char*>(&footprint_padding_)) + sizeof(map_update_frequency_));
}

ParaCostmapInterface::~ParaCostmapInterface() {
  // @@protoc_insertion_point(destructor:roborts_costmap.ParaCostmapInterface)
  SharedDtor();
}

void ParaCostmapInterface::SharedDtor() {
  global_frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  robot_base_frame_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  inflation_file_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParaCostmapInterface::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParaCostmapInterface::descriptor() {
  ::protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParaCostmapInterface& ParaCostmapInterface::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_ParaCostmapInterface.base);
  return *internal_default_instance();
}


void ParaCostmapInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:roborts_costmap.ParaCostmapInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      global_frame_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      robot_base_frame_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      inflation_file_path_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&footprint_padding_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&map_height_) -
        reinterpret_cast<char*>(&footprint_padding_)) + sizeof(map_height_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&map_origin_x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&has_local_static_layer_) -
        reinterpret_cast<char*>(&map_origin_x_)) + sizeof(has_local_static_layer_));
  }
  if (cached_has_bits & 458752u) {
    ::memset(&has_dynamic_obstacle_layer_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&map_update_frequency_) -
        reinterpret_cast<char*>(&has_dynamic_obstacle_layer_)) + sizeof(map_update_frequency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParaCostmapInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roborts_costmap.ParaCostmapInterface)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string global_frame = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_global_frame()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->global_frame().data(), static_cast<int>(this->global_frame().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roborts_costmap.ParaCostmapInterface.global_frame");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string robot_base_frame = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_robot_base_frame()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->robot_base_frame().data(), static_cast<int>(this->robot_base_frame().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roborts_costmap.ParaCostmapInterface.robot_base_frame");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double footprint_padding = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          set_has_footprint_padding();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &footprint_padding_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double transform_tolerance = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          set_has_transform_tolerance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &transform_tolerance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double distance_threshold = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          set_has_distance_threshold();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &distance_threshold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_width = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u /* 49 & 0xFF */)) {
          set_has_map_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_height = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {
          set_has_map_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_origin_x = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_map_origin_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_origin_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_origin_y = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_map_origin_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_origin_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_resolution = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {
          set_has_map_resolution();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_tracking_unknown = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_is_tracking_unknown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_tracking_unknown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_rolling_window = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_is_rolling_window();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_rolling_window_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool has_obstacle_layer = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_has_obstacle_layer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_obstacle_layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool has_static_layer = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_has_static_layer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_static_layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool has_local_static_layer = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_has_local_static_layer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_local_static_layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool has_dynamic_obstacle_layer = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_has_dynamic_obstacle_layer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_dynamic_obstacle_layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool has_detection_layer = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_has_detection_layer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_detection_layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string inflation_file_path = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inflation_file_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->inflation_file_path().data(), static_cast<int>(this->inflation_file_path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "roborts_costmap.ParaCostmapInterface.inflation_file_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double map_update_frequency = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 153 & 0xFF */)) {
          set_has_map_update_frequency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &map_update_frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roborts_costmap.ParaCostmapInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roborts_costmap.ParaCostmapInterface)
  return false;
#undef DO_
}

void ParaCostmapInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roborts_costmap.ParaCostmapInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string global_frame = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->global_frame().data(), static_cast<int>(this->global_frame().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roborts_costmap.ParaCostmapInterface.global_frame");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->global_frame(), output);
  }

  // required string robot_base_frame = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robot_base_frame().data(), static_cast<int>(this->robot_base_frame().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roborts_costmap.ParaCostmapInterface.robot_base_frame");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->robot_base_frame(), output);
  }

  // required double footprint_padding = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->footprint_padding(), output);
  }

  // required double transform_tolerance = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->transform_tolerance(), output);
  }

  // required double distance_threshold = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->distance_threshold(), output);
  }

  // required double map_width = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->map_width(), output);
  }

  // required double map_height = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->map_height(), output);
  }

  // required double map_origin_x = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->map_origin_x(), output);
  }

  // required double map_origin_y = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->map_origin_y(), output);
  }

  // required double map_resolution = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->map_resolution(), output);
  }

  // required bool is_tracking_unknown = 11;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_tracking_unknown(), output);
  }

  // required bool is_rolling_window = 12;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_rolling_window(), output);
  }

  // required bool has_obstacle_layer = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->has_obstacle_layer(), output);
  }

  // required bool has_static_layer = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->has_static_layer(), output);
  }

  // required bool has_local_static_layer = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->has_local_static_layer(), output);
  }

  // required bool has_dynamic_obstacle_layer = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->has_dynamic_obstacle_layer(), output);
  }

  // required bool has_detection_layer = 17;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->has_detection_layer(), output);
  }

  // required string inflation_file_path = 18;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inflation_file_path().data(), static_cast<int>(this->inflation_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roborts_costmap.ParaCostmapInterface.inflation_file_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->inflation_file_path(), output);
  }

  // required double map_update_frequency = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(19, this->map_update_frequency(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roborts_costmap.ParaCostmapInterface)
}

::google::protobuf::uint8* ParaCostmapInterface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roborts_costmap.ParaCostmapInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string global_frame = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->global_frame().data(), static_cast<int>(this->global_frame().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roborts_costmap.ParaCostmapInterface.global_frame");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->global_frame(), target);
  }

  // required string robot_base_frame = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->robot_base_frame().data(), static_cast<int>(this->robot_base_frame().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roborts_costmap.ParaCostmapInterface.robot_base_frame");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->robot_base_frame(), target);
  }

  // required double footprint_padding = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->footprint_padding(), target);
  }

  // required double transform_tolerance = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->transform_tolerance(), target);
  }

  // required double distance_threshold = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->distance_threshold(), target);
  }

  // required double map_width = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->map_width(), target);
  }

  // required double map_height = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->map_height(), target);
  }

  // required double map_origin_x = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->map_origin_x(), target);
  }

  // required double map_origin_y = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->map_origin_y(), target);
  }

  // required double map_resolution = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->map_resolution(), target);
  }

  // required bool is_tracking_unknown = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_tracking_unknown(), target);
  }

  // required bool is_rolling_window = 12;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_rolling_window(), target);
  }

  // required bool has_obstacle_layer = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->has_obstacle_layer(), target);
  }

  // required bool has_static_layer = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->has_static_layer(), target);
  }

  // required bool has_local_static_layer = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->has_local_static_layer(), target);
  }

  // required bool has_dynamic_obstacle_layer = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->has_dynamic_obstacle_layer(), target);
  }

  // required bool has_detection_layer = 17;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->has_detection_layer(), target);
  }

  // required string inflation_file_path = 18;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inflation_file_path().data(), static_cast<int>(this->inflation_file_path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "roborts_costmap.ParaCostmapInterface.inflation_file_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->inflation_file_path(), target);
  }

  // required double map_update_frequency = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(19, this->map_update_frequency(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roborts_costmap.ParaCostmapInterface)
  return target;
}

size_t ParaCostmapInterface::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:roborts_costmap.ParaCostmapInterface)
  size_t total_size = 0;

  if (has_global_frame()) {
    // required string global_frame = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->global_frame());
  }

  if (has_robot_base_frame()) {
    // required string robot_base_frame = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_base_frame());
  }

  if (has_inflation_file_path()) {
    // required string inflation_file_path = 18;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inflation_file_path());
  }

  if (has_footprint_padding()) {
    // required double footprint_padding = 3;
    total_size += 1 + 8;
  }

  if (has_transform_tolerance()) {
    // required double transform_tolerance = 4;
    total_size += 1 + 8;
  }

  if (has_distance_threshold()) {
    // required double distance_threshold = 5;
    total_size += 1 + 8;
  }

  if (has_map_width()) {
    // required double map_width = 6;
    total_size += 1 + 8;
  }

  if (has_map_height()) {
    // required double map_height = 7;
    total_size += 1 + 8;
  }

  if (has_map_origin_x()) {
    // required double map_origin_x = 8;
    total_size += 1 + 8;
  }

  if (has_map_origin_y()) {
    // required double map_origin_y = 9;
    total_size += 1 + 8;
  }

  if (has_map_resolution()) {
    // required double map_resolution = 10;
    total_size += 1 + 8;
  }

  if (has_is_tracking_unknown()) {
    // required bool is_tracking_unknown = 11;
    total_size += 1 + 1;
  }

  if (has_is_rolling_window()) {
    // required bool is_rolling_window = 12;
    total_size += 1 + 1;
  }

  if (has_has_obstacle_layer()) {
    // required bool has_obstacle_layer = 13;
    total_size += 1 + 1;
  }

  if (has_has_static_layer()) {
    // required bool has_static_layer = 14;
    total_size += 1 + 1;
  }

  if (has_has_local_static_layer()) {
    // required bool has_local_static_layer = 15;
    total_size += 1 + 1;
  }

  if (has_has_dynamic_obstacle_layer()) {
    // required bool has_dynamic_obstacle_layer = 16;
    total_size += 2 + 1;
  }

  if (has_has_detection_layer()) {
    // required bool has_detection_layer = 17;
    total_size += 2 + 1;
  }

  if (has_map_update_frequency()) {
    // required double map_update_frequency = 19;
    total_size += 2 + 8;
  }

  return total_size;
}
size_t ParaCostmapInterface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roborts_costmap.ParaCostmapInterface)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0007ffff) ^ 0x0007ffff) == 0) {  // All required fields are present.
    // required string global_frame = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->global_frame());

    // required string robot_base_frame = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->robot_base_frame());

    // required string inflation_file_path = 18;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->inflation_file_path());

    // required double footprint_padding = 3;
    total_size += 1 + 8;

    // required double transform_tolerance = 4;
    total_size += 1 + 8;

    // required double distance_threshold = 5;
    total_size += 1 + 8;

    // required double map_width = 6;
    total_size += 1 + 8;

    // required double map_height = 7;
    total_size += 1 + 8;

    // required double map_origin_x = 8;
    total_size += 1 + 8;

    // required double map_origin_y = 9;
    total_size += 1 + 8;

    // required double map_resolution = 10;
    total_size += 1 + 8;

    // required bool is_tracking_unknown = 11;
    total_size += 1 + 1;

    // required bool is_rolling_window = 12;
    total_size += 1 + 1;

    // required bool has_obstacle_layer = 13;
    total_size += 1 + 1;

    // required bool has_static_layer = 14;
    total_size += 1 + 1;

    // required bool has_local_static_layer = 15;
    total_size += 1 + 1;

    // required bool has_dynamic_obstacle_layer = 16;
    total_size += 2 + 1;

    // required bool has_detection_layer = 17;
    total_size += 2 + 1;

    // required double map_update_frequency = 19;
    total_size += 2 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParaCostmapInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roborts_costmap.ParaCostmapInterface)
  GOOGLE_DCHECK_NE(&from, this);
  const ParaCostmapInterface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParaCostmapInterface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roborts_costmap.ParaCostmapInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roborts_costmap.ParaCostmapInterface)
    MergeFrom(*source);
  }
}

void ParaCostmapInterface::MergeFrom(const ParaCostmapInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roborts_costmap.ParaCostmapInterface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_global_frame();
      global_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.global_frame_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_robot_base_frame();
      robot_base_frame_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.robot_base_frame_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_inflation_file_path();
      inflation_file_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inflation_file_path_);
    }
    if (cached_has_bits & 0x00000008u) {
      footprint_padding_ = from.footprint_padding_;
    }
    if (cached_has_bits & 0x00000010u) {
      transform_tolerance_ = from.transform_tolerance_;
    }
    if (cached_has_bits & 0x00000020u) {
      distance_threshold_ = from.distance_threshold_;
    }
    if (cached_has_bits & 0x00000040u) {
      map_width_ = from.map_width_;
    }
    if (cached_has_bits & 0x00000080u) {
      map_height_ = from.map_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      map_origin_x_ = from.map_origin_x_;
    }
    if (cached_has_bits & 0x00000200u) {
      map_origin_y_ = from.map_origin_y_;
    }
    if (cached_has_bits & 0x00000400u) {
      map_resolution_ = from.map_resolution_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_tracking_unknown_ = from.is_tracking_unknown_;
    }
    if (cached_has_bits & 0x00001000u) {
      is_rolling_window_ = from.is_rolling_window_;
    }
    if (cached_has_bits & 0x00002000u) {
      has_obstacle_layer_ = from.has_obstacle_layer_;
    }
    if (cached_has_bits & 0x00004000u) {
      has_static_layer_ = from.has_static_layer_;
    }
    if (cached_has_bits & 0x00008000u) {
      has_local_static_layer_ = from.has_local_static_layer_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      has_dynamic_obstacle_layer_ = from.has_dynamic_obstacle_layer_;
    }
    if (cached_has_bits & 0x00020000u) {
      has_detection_layer_ = from.has_detection_layer_;
    }
    if (cached_has_bits & 0x00040000u) {
      map_update_frequency_ = from.map_update_frequency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ParaCostmapInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roborts_costmap.ParaCostmapInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParaCostmapInterface::CopyFrom(const ParaCostmapInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roborts_costmap.ParaCostmapInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParaCostmapInterface::IsInitialized() const {
  if ((_has_bits_[0] & 0x0007ffff) != 0x0007ffff) return false;
  return true;
}

void ParaCostmapInterface::Swap(ParaCostmapInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParaCostmapInterface::InternalSwap(ParaCostmapInterface* other) {
  using std::swap;
  global_frame_.Swap(&other->global_frame_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  robot_base_frame_.Swap(&other->robot_base_frame_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  inflation_file_path_.Swap(&other->inflation_file_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(footprint_padding_, other->footprint_padding_);
  swap(transform_tolerance_, other->transform_tolerance_);
  swap(distance_threshold_, other->distance_threshold_);
  swap(map_width_, other->map_width_);
  swap(map_height_, other->map_height_);
  swap(map_origin_x_, other->map_origin_x_);
  swap(map_origin_y_, other->map_origin_y_);
  swap(map_resolution_, other->map_resolution_);
  swap(is_tracking_unknown_, other->is_tracking_unknown_);
  swap(is_rolling_window_, other->is_rolling_window_);
  swap(has_obstacle_layer_, other->has_obstacle_layer_);
  swap(has_static_layer_, other->has_static_layer_);
  swap(has_local_static_layer_, other->has_local_static_layer_);
  swap(has_dynamic_obstacle_layer_, other->has_dynamic_obstacle_layer_);
  swap(has_detection_layer_, other->has_detection_layer_);
  swap(map_update_frequency_, other->map_update_frequency_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParaCostmapInterface::GetMetadata() const {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Point::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point::kXFieldNumber;
const int Point::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point::Point()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_Point.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:roborts_costmap.Point)
}
Point::Point(const Point& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:roborts_costmap.Point)
}

void Point::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Point::~Point() {
  // @@protoc_insertion_point(destructor:roborts_costmap.Point)
  SharedDtor();
}

void Point::SharedDtor() {
}

void Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point::descriptor() {
  ::protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point& Point::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_Point.base);
  return *internal_default_instance();
}


void Point::Clear() {
// @@protoc_insertion_point(message_clear_start:roborts_costmap.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&y_) -
        reinterpret_cast<char*>(&x_)) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Point::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roborts_costmap.Point)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roborts_costmap.Point)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roborts_costmap.Point)
  return false;
#undef DO_
}

void Point::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roborts_costmap.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roborts_costmap.Point)
}

::google::protobuf::uint8* Point::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roborts_costmap.Point)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roborts_costmap.Point)
  return target;
}

size_t Point::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:roborts_costmap.Point)
  size_t total_size = 0;

  if (has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roborts_costmap.Point)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roborts_costmap.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Point* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roborts_costmap.Point)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roborts_costmap.Point)
    MergeFrom(*source);
  }
}

void Point::MergeFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roborts_costmap.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Point::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roborts_costmap.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point::CopyFrom(const Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roborts_costmap.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Point::Swap(Point* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point::InternalSwap(Point* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point::GetMetadata() const {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Footprint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Footprint::kPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Footprint::Footprint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_Footprint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:roborts_costmap.Footprint)
}
Footprint::Footprint(const Footprint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      point_(from.point_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:roborts_costmap.Footprint)
}

void Footprint::SharedCtor() {
}

Footprint::~Footprint() {
  // @@protoc_insertion_point(destructor:roborts_costmap.Footprint)
  SharedDtor();
}

void Footprint::SharedDtor() {
}

void Footprint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Footprint::descriptor() {
  ::protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Footprint& Footprint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_Footprint.base);
  return *internal_default_instance();
}


void Footprint::Clear() {
// @@protoc_insertion_point(message_clear_start:roborts_costmap.Footprint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Footprint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roborts_costmap.Footprint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .roborts_costmap.Point point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roborts_costmap.Footprint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roborts_costmap.Footprint)
  return false;
#undef DO_
}

void Footprint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roborts_costmap.Footprint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .roborts_costmap.Point point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->point(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roborts_costmap.Footprint)
}

::google::protobuf::uint8* Footprint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roborts_costmap.Footprint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .roborts_costmap.Point point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->point(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roborts_costmap.Footprint)
  return target;
}

size_t Footprint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roborts_costmap.Footprint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .roborts_costmap.Point point = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Footprint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roborts_costmap.Footprint)
  GOOGLE_DCHECK_NE(&from, this);
  const Footprint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Footprint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roborts_costmap.Footprint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roborts_costmap.Footprint)
    MergeFrom(*source);
  }
}

void Footprint::MergeFrom(const Footprint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roborts_costmap.Footprint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
}

void Footprint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roborts_costmap.Footprint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Footprint::CopyFrom(const Footprint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roborts_costmap.Footprint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Footprint::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->point())) return false;
  return true;
}

void Footprint::Swap(Footprint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Footprint::InternalSwap(Footprint* other) {
  using std::swap;
  CastToBase(&point_)->InternalSwap(CastToBase(&other->point_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Footprint::GetMetadata() const {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParaCollection::InitAsDefaultInstance() {
  ::roborts_costmap::_ParaCollection_default_instance_._instance.get_mutable()->para_costmap_interface_ = const_cast< ::roborts_costmap::ParaCostmapInterface*>(
      ::roborts_costmap::ParaCostmapInterface::internal_default_instance());
  ::roborts_costmap::_ParaCollection_default_instance_._instance.get_mutable()->footprint_ = const_cast< ::roborts_costmap::Footprint*>(
      ::roborts_costmap::Footprint::internal_default_instance());
  ::roborts_costmap::_ParaCollection_default_instance_._instance.get_mutable()->para_basic_ = const_cast< ::roborts_costmap::ParaBasic*>(
      ::roborts_costmap::ParaBasic::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParaCollection::kParaCostmapInterfaceFieldNumber;
const int ParaCollection::kFootprintFieldNumber;
const int ParaCollection::kParaBasicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParaCollection::ParaCollection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_ParaCollection.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:roborts_costmap.ParaCollection)
}
ParaCollection::ParaCollection(const ParaCollection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_para_costmap_interface()) {
    para_costmap_interface_ = new ::roborts_costmap::ParaCostmapInterface(*from.para_costmap_interface_);
  } else {
    para_costmap_interface_ = NULL;
  }
  if (from.has_footprint()) {
    footprint_ = new ::roborts_costmap::Footprint(*from.footprint_);
  } else {
    footprint_ = NULL;
  }
  if (from.has_para_basic()) {
    para_basic_ = new ::roborts_costmap::ParaBasic(*from.para_basic_);
  } else {
    para_basic_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:roborts_costmap.ParaCollection)
}

void ParaCollection::SharedCtor() {
  ::memset(&para_costmap_interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&para_basic_) -
      reinterpret_cast<char*>(&para_costmap_interface_)) + sizeof(para_basic_));
}

ParaCollection::~ParaCollection() {
  // @@protoc_insertion_point(destructor:roborts_costmap.ParaCollection)
  SharedDtor();
}

void ParaCollection::SharedDtor() {
  if (this != internal_default_instance()) delete para_costmap_interface_;
  if (this != internal_default_instance()) delete footprint_;
  if (this != internal_default_instance()) delete para_basic_;
}

void ParaCollection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParaCollection::descriptor() {
  ::protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParaCollection& ParaCollection::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_costmap_5fparameter_5fsetting_2eproto::scc_info_ParaCollection.base);
  return *internal_default_instance();
}


void ParaCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:roborts_costmap.ParaCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(para_costmap_interface_ != NULL);
      para_costmap_interface_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(footprint_ != NULL);
      footprint_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(para_basic_ != NULL);
      para_basic_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParaCollection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:roborts_costmap.ParaCollection)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .roborts_costmap.ParaCostmapInterface para_costmap_interface = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_para_costmap_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .roborts_costmap.Footprint footprint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_footprint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .roborts_costmap.ParaBasic para_basic = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_para_basic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:roborts_costmap.ParaCollection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:roborts_costmap.ParaCollection)
  return false;
#undef DO_
}

void ParaCollection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:roborts_costmap.ParaCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .roborts_costmap.ParaCostmapInterface para_costmap_interface = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_para_costmap_interface(), output);
  }

  // required .roborts_costmap.Footprint footprint = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_footprint(), output);
  }

  // required .roborts_costmap.ParaBasic para_basic = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_para_basic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:roborts_costmap.ParaCollection)
}

::google::protobuf::uint8* ParaCollection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:roborts_costmap.ParaCollection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .roborts_costmap.ParaCostmapInterface para_costmap_interface = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_para_costmap_interface(), deterministic, target);
  }

  // required .roborts_costmap.Footprint footprint = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_footprint(), deterministic, target);
  }

  // required .roborts_costmap.ParaBasic para_basic = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_para_basic(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:roborts_costmap.ParaCollection)
  return target;
}

size_t ParaCollection::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:roborts_costmap.ParaCollection)
  size_t total_size = 0;

  if (has_para_costmap_interface()) {
    // required .roborts_costmap.ParaCostmapInterface para_costmap_interface = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *para_costmap_interface_);
  }

  if (has_footprint()) {
    // required .roborts_costmap.Footprint footprint = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *footprint_);
  }

  if (has_para_basic()) {
    // required .roborts_costmap.ParaBasic para_basic = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *para_basic_);
  }

  return total_size;
}
size_t ParaCollection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:roborts_costmap.ParaCollection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .roborts_costmap.ParaCostmapInterface para_costmap_interface = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *para_costmap_interface_);

    // required .roborts_costmap.Footprint footprint = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *footprint_);

    // required .roborts_costmap.ParaBasic para_basic = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *para_basic_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParaCollection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:roborts_costmap.ParaCollection)
  GOOGLE_DCHECK_NE(&from, this);
  const ParaCollection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParaCollection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:roborts_costmap.ParaCollection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:roborts_costmap.ParaCollection)
    MergeFrom(*source);
  }
}

void ParaCollection::MergeFrom(const ParaCollection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:roborts_costmap.ParaCollection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_para_costmap_interface()->::roborts_costmap::ParaCostmapInterface::MergeFrom(from.para_costmap_interface());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_footprint()->::roborts_costmap::Footprint::MergeFrom(from.footprint());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_para_basic()->::roborts_costmap::ParaBasic::MergeFrom(from.para_basic());
    }
  }
}

void ParaCollection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:roborts_costmap.ParaCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParaCollection::CopyFrom(const ParaCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:roborts_costmap.ParaCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParaCollection::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_para_costmap_interface()) {
    if (!this->para_costmap_interface_->IsInitialized()) return false;
  }
  if (has_footprint()) {
    if (!this->footprint_->IsInitialized()) return false;
  }
  if (has_para_basic()) {
    if (!this->para_basic_->IsInitialized()) return false;
  }
  return true;
}

void ParaCollection::Swap(ParaCollection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParaCollection::InternalSwap(ParaCollection* other) {
  using std::swap;
  swap(para_costmap_interface_, other->para_costmap_interface_);
  swap(footprint_, other->footprint_);
  swap(para_basic_, other->para_basic_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParaCollection::GetMetadata() const {
  protobuf_costmap_5fparameter_5fsetting_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_costmap_5fparameter_5fsetting_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace roborts_costmap
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::roborts_costmap::ParaBasic* Arena::CreateMaybeMessage< ::roborts_costmap::ParaBasic >(Arena* arena) {
  return Arena::CreateInternal< ::roborts_costmap::ParaBasic >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::roborts_costmap::ParaCostmapInterface* Arena::CreateMaybeMessage< ::roborts_costmap::ParaCostmapInterface >(Arena* arena) {
  return Arena::CreateInternal< ::roborts_costmap::ParaCostmapInterface >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::roborts_costmap::Point* Arena::CreateMaybeMessage< ::roborts_costmap::Point >(Arena* arena) {
  return Arena::CreateInternal< ::roborts_costmap::Point >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::roborts_costmap::Footprint* Arena::CreateMaybeMessage< ::roborts_costmap::Footprint >(Arena* arena) {
  return Arena::CreateInternal< ::roborts_costmap::Footprint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::roborts_costmap::ParaCollection* Arena::CreateMaybeMessage< ::roborts_costmap::ParaCollection >(Arena* arena) {
  return Arena::CreateInternal< ::roborts_costmap::ParaCollection >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

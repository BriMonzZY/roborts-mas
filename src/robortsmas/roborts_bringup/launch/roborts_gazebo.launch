<launch>

  <arg name="map" value="icra2019"/>

  <!--Load parameters for localization node  -->
  <rosparam command="load" file="$(find roborts_localization)/config/localization.yaml" />
  <rosparam command="load" file="$(find roborts_localization)/amcl/config/amcl.yaml" />
  
  <param name="robot_description" textfile="$(find roborts_bringup)/urdf/sentry.urdf" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <!-- load world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" />
  <!-- open robot model -->
  <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner" respawn="false" output="screen"
    args="-urdf -model sentry -z 0 -x 1 -y 1  -file $(find roborts_bringup)/urdf/sentry.urdf"/>
  <!-- <node pkg="gazebo_ros" type="spawn_model" name="urdf_spawner2" respawn="false" output="screen"
    args="-urdf -model rmua -z 0 -x 0 -y 0  -file $(find roborts_bringup)/urdf/rmua.urdf"/> -->


  <!-- Run the map server -->
  <!-- <node name="map_server" pkg="map_server" type="map_server" args="$(find roborts_bringup)/maps/$(arg map).yaml" respawn="false" /> -->


  <!-- Run the localization node -->
  <!-- <node pkg="roborts_localization" type="localization_node" name="localization_node" respawn="false" /> -->
  <!-- <node pkg="roborts_localization" type="localization_node" name="localization_node" respawn="false" >
    <param name="initial_pose_x" type="double" value="7.5" />
    <param name="initial_pose_y" type="double" value="4.5" />
    <param name="initial_pose_a" type="double" value="-1.57" />
  </node> -->

  <!-- Run the global planner Node -->
  <!-- <node pkg="roborts_planning" type="global_planner_node" name="global_planner_node" respawn="false" /> -->

  <!-- Run the local planner node -->
  <!-- <node pkg="roborts_planning" type="local_planner_node" name="local_planner_node" respawn="false" /> -->

  <!-- Run the velocity converter node -->
  <!-- <node pkg="roborts_planning" type="vel_converter" name="vel_converter_node" respawn="false" /> -->

  <!-- planning test -->
  <!-- By using this point, you can use the 2d navigation tool to navigate through rviz. 启动这个节点，可以使用rviz中的2d navigation工具来设置目标 -->
  <!-- <node pkg="roborts_planning" type="global_planner_test" name="global_planner_test" respawn="false" /> -->

  <!-- laser detection -->
  <!-- 启动动态障碍物检测 -->
  <!-- <node name="laser_detection" pkg="laser_detection" type="laser_detection_node" respawn="false" /> -->

  <!-- map odom tf  (Manually publish tf) -->
  <!-- <node name="tf_map_odom" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 map odom 50" /> -->

  <!-- Run the rviz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find roborts_bringup)/rviz/roborts_gazebo.rviz" />


</launch>
